Práctica 5 - Sesión SIP
Protocolos para la Transmisión de Audio y Vı́deo en Internet
Versión 8.0.1 - 6.11.2017

Ejercicios

Creación de repositorio para la práctica

1. Con el navegador, dirı́gete al repositorio ptavi-p5 en la cuenta del
profesor en GitHub1 y realiza un fork, de manera que consigas tener
una copia del repositorio en tu cuenta de GitHub. Clona el repositorio
que acabas de crear a local para poder editar los archivos. Trabaja a
partir de ahora en ese repositorio, sincronizando los cambios que vayas
realizando.

Como tarde al final de la práctica, deberás realizar un push para subir
tus cambios a tu repositorio en GitHub. En esta práctica, al contrario
que con las demás, se recomienda hacer frecuentes commits, pero el
push al final.

Análisis de una sesión SIP

Se ha capturado una sesión SIP con Ekiga (archivo sip.cap.gz), que
se puede abrir con Wireshark2 . Se pide rellenar las cuestiones que se
plantean en este guión en el fichero p5.txt que encontrarás también
en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP
con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes
cuestiones:
* ¿Cuántos paquetes componen la captura?
La captura tiene 954 paquetes.
* ¿Cuánto tiempo dura la captura?
La captura dura 56,149 segundos.
* ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se
trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
192.168.1.34, es una IP pública porque las que se encuentran dentro de este
rango 192.168.0.0 a 192.168.255.255 lo son.

3. Antes de analizar las tramas, mira las estadı́sticas generales que aparecen en el menú de Statistics. En el apartado de jerarquı́a de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico
correspondiente al protocolo TCP y UDP.
* ¿Cuál de los dos es mayor? ¿Tiene esto sentido si estamos hablando
de una aplicación que transmite en tiempo real?
UDP es mayor(96.2%), si tiene sentido ya que TCP en tiempo real por culpa de los
reenvios no funciona correctamente. Además UDP no necesita establecer
previamente conexión ni asentimientos continuos.
* ¿Qué otros protocolos podemos ver en la jerarquı́a de protocolos?
¿Cuales crees que son señal y cuales ruido?
Podemos ver también DNS, TCP, HTTP, SIP, RTP, RTCP, ARP, ICMP, UDP, STUN.
Son señal: RTP, UDP, SIP, 
Son ruido: ARP, ICMP


4. Observa por encima el flujo de tramas en el menú de Statistics en IO
Graphs. La captura que estamos viendo incluye desde la inicialización
(registro) de la aplicación hasta su finalización, con una llamada entremedias.
* Filtra por sip para conocer cuándo se envı́an paquetes SIP. ¿En
qué segundos tienen lugar esos envı́os?
EN 7,4 s se produce el registro, en 14,5 s llamada que se repite en 16,3s 
en 38-39 mensaje BYE y en 55 s.
* Y los paquetes con RTP, ¿cuándo se envı́an?
Desde el segundo 16 que se envia el invite de SIP al 38 que es lo que dura 
la llamada.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las dos primeras tramas de la captura.
* ¿Qué servicio es el utilizado en estas tramas?
Utiliza el protocolo DNS.
* ¿Cuál es la dirección IP del servidor de nombres del ordenador
que ha lanzado Ekiga?
La dirección es 80.58.61.250.
* ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
Devuelve la direccion 86.64.162.35.

6. A continuación, hay más de una docena de tramas TCP/HTTP.
* ¿Podrı́as decir la URL que se está pidiendo?
La URL que pide es ekiga.net/ip.
* ¿Qué user agent (UA) la está pidiendo?
192.168.1.34
* ¿Qué devuelve el servidor?
Le devuelve 200 OK.
* Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y
vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo
que está respondiendo el servidor?
Recibiríamos un IP, por la que el servidor ve al agente. Además sería 
una IP pública.

7. Hasta la trama 45 se puede observar una secuencia de tramas del
protocolo STUN.
* ¿Por qué se hace uso de este protocolo?
El servidor STUN permite a los clientes encontrar sus direcciones públicas,
el tipo de NAT del cual ellos están atrás y el puerto Internet asociado por 
el NAT con el puerto local específico.Es un protocolo cliente-servidor que opera tanto en 
TCP como en UDP y escucha en el puerto 3478.
Un cliente normalmente contacta al servidor STUN en una dirección IP
y puerto (3478) específico, pero el servidor también puede sugerir
a los clientes que realicen las verificaciones en direcciones IP y puerto alternativos arbitrarios

* ¿Podrı́as decir si estamos tras un NAT o no?
Si, porque usamos el protocolo STUN.

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al
realizar una llamada. Por eso, todo usuario registra su localización en
un servidor Registrar. El Registrar guarda información sobre los
usuarios en un servidor de localización que puede ser utilizado para
localizar usuarios.
* ¿Qué dirección IP tiene el servidor Registrar?
No lo podemos saber, dependerá si usa un proxy 86.64.162.35.
* ¿A qué puerto (del servidor Registrar) se envı́an los paquetes
SIP?
Se envían al puerto 5063.
* ¿Qué método SIP utiliza el UA para registrarse?
Utiliza el método REGISTER.
* Además de REGISTER, ¿podrı́as decir qué instrucciones SIP entiende el UA?
También utiliza INVITE, ACK, OPTIONS, REFER, BYE, CANCEL, NOTIFY, MESSAGE.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
* ¿Se registra con éxito en el primer intento?
No, primero recibe un 401 Unauthorized en el paquete 50.
* ¿Cómo sabemos si el registro se ha realizado correctamente o no?
Lo sabemos si recibimo un 200 OK.
* ¿Podrı́as identificar las diferencias entre el primer intento y el
segundo de registro? (fı́jate en el tamaño de los paquetes y mira
a qué se debe el cambio)
Es más corto el primero al no tener número de autentificación.
* ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica
las unidades.
3600 segundos.

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar
con el servicio de eco de Ekiga que nos permite comprobar si nos
hemos conectado correctamente. El servicio de eco tiene la dirección
sip:500@ekiga.net. Veamos el INVITE de cerca.
* ¿Puede verse el nombre del que efectúa la llamada, ası́ como su
dirección SIP?
Si , es sip:grex@exiga.net con dirección sip 83.36.48.212.
* ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
Contiene los valores de inicializacion en SDP.
* ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
No tiene éxito porque no ha recibido 200 OK y entonces vuelve a intentarlo enviando INVITE.
* ¿En qué se diferencia el segundo INVITE más abajo del primero?
¿A qué crees que se debe esto?
La diferencia es que el campo Proxy-Authorization que aparece en el segundo INVITE. Esto se debe a que recibe 407: Proxy Authentication (paquete 85), quiere decir que necesita identificación.

11. Una vez conectado, estudia el intercambio de tramas.
* ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
Utiliza RTP que es un protocolo no fiable, que sirve para la transmisión en tiempo real de audio en vídeo, también utiliza
H.261 que comprime audio y vídeo.
RTCP es utilizado
para enviar datos de control entre el emisor y receptor de una secuencia RTP. 
* ¿Cuál es el tamaño de paquete de los mismos?
RTP tiene tamaño de 214 bytes sin embargo, H.261 va cambiando.
* ¿Se utilizan bits de padding?
No, ..0. .... = Padding: False
* ¿Cuál es la periodicidad de los paquetes (en origen; nota que la
captura es en destino)?
Vemos que el Payload Type es G.711 PCMA que transmite 8000 muestras por segundo.El  timestamp es 160 por tanto 8000/160
transmite 50 paquetes.
Y su periodo es 1/50 = 20 ms = 0.02 s.
* ¿Cuántos bits/segundo se envı́an?
 64KBIT/S
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una
opción RTP. Empecemos mirando los flujos RTP.
* ¿Cuántos flujos hay? ¿por qué?
Hay dos uno con puerto 5010 y otro con puerto 5014. Porque uno pertenece al audio y otro al vídeo.
* ¿Cuántos paquetes se pierden?
No se pierde ninguno, vemos LOST 0.
* ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el
valor de delta?
1290.497ms la delta del vídeo, 1290.44ms la delta del audio. La delta es el tiempo que pasa
entre un paquete y otro.
* ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué
quiere decir eso? ¿Crees que estamos ante una conversación de
calidad?
Audio = max jitter 119.635 mean jitter 42.500
Video = max jitter 183.096 y mean jitter 153.240.
Es la variación del retardo con el que llegan los paquetes. Debe ser menor de 100 ms.La conversación sí ha sido de calidad ya que el jitter medio del audio es de 42.500ms.

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony
-> RTP -> Stream Analysis.
* ¿Cuánto valen el delta y el jitter para el primer paquete que
ha llegado?
0 ambos porque no hay más paquetes para calcularlo.
* ¿Podemos saber si éste es el primer paquete que nos han enviado?
Sí, porque esta la casilla marker señalada.
* Los valores de jitter son menores de 10ms hasta un paquete
dado. ¿Cuál?
Hasta el paquete 246.
* ¿A qué se debe el cambio tan brusco del jitter?
Se debe al aumento de la delta.
* ¿Es comparable el cambio en el valor de jitter con el del delta?
¿Cual es más grande?
Si, porque el jitter depende de la delta.

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la
llamada de voz IP capturada en una ventana emergente. Selecciona
esa llamada y pulsa el botón Graph.
* ¿Cuánto dura la conversación? Del segundo 17 al 38
* ¿Cuáles son sus SSRC? 
43306582, bf4afd37.
¿Por qué hay varios SSRCs? 
Porque hay varios flujos
¿Hay CSRCs?
No

15. Identifica la trama donde se finaliza la conversación.
* ¿Qué método SIP se utiliza?
El método BYE.
* ¿En qué trama(s)?
924, 925, 927, 933.
* ¿Por qué crees que se envı́a varias veces?
Para asegurarse de que llega al destino ya que estamos en UDP y no nos asegura que llegue por eso lo envía varias veces.

16. Finalmente, se cierra la aplicación de VozIP.
* ¿Por qué aparece una instrucción SIP del tipo REGISTER?
Porque para indicar que el cliente quiere darse de baja, y ser eliminado se tiene que enviar
un register con EXPIRES a 0.
* ¿En qué trama sucede esto?
En la trama 950.
* ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
En la cabecera EXPIRES que ahora vale 0 en lugar de 3600.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

Captura de una sesión SIP

17. Dirı́gete a la web http://www.ekiga.net con el navegador y créate
una cuenta. Lanza Ekiga, y configúralo con los datos de la cuenta
que te acabas de crear. Comprueba que estás conectado (En la barra
al final de la ventana podrás ver “Connected”). Al terminar, cierra
completamente Ekiga.

18. Captura una sesión SIP de una conversación con el número SIP sip:500@ekigan.net.
Recuerda que has de comenzar a capturar tramas antes de arrancar
Ekiga para ver todo el proceso3 .

19. Observa las diferencias en el inicio de la conversación entre el entorno
del laboratorio y el del ejercicio anterior4 :
* ¿Se utilizan DNS y STUN? ¿Por qué?
* ¿Son diferentes el registro y la descripción de la sesión?

20. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
* ¿Cuántos flujos tenemos?
* ¿Cuál es su periodicidad?
* ¿Cuánto es el valor máximo del delta y los valores medios y
máximo del jitter?
* ¿Podrı́as reproducir la conversación desde Wireshark? ¿Cómo?
Comprueba que poniendo un valor demasiado pequeño para el
buffer de jitter, la conversación puede no tener la calidad necesaria.
* ¿Sabrı́as decir qué tipo de servicio ofrece sip:500@ekiga.net?
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


21. Filtra por los paquetes SIP de la captura y guarda únicamente los
paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás añadirlo al repositorio.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

